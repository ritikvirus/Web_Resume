name: Deploy to Docker Hub

on:
  label:
    types: [created, edited]
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Retrieve latest Docker image tag
        id: get_tag
        run: |
          latest_tag=$(docker search ritikvirus/portfolioubuntu --limit 1 --no-trunc | awk -F':' '{print $NF}')
          echo "::set-output name=tag::$latest_tag"

      - name: Increment Docker image tag
        id: increment_tag
        run: |
          current_tag="${{ steps.get_tag.outputs.tag }}"
          incremented_tag=$((current_tag + 1))
          echo "::set-output name=tag::$incremented_tag"
                       
        
      - name: Build Docker image
        run: docker build -t ritikvirus/portfolioubuntu:v${{ steps.increment_tag.outputs.tag }} .

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.D_USERNAME }} -p ${{ secrets.D_PASS }}

      - name: Push Docker image to Docker Hub
        run: docker push ritikvirus/portfolioubuntu:v${{ steps.increment_tag.outputs.tag }}

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          HOSTNAME: ${{ secrets.HOST_IP }}
          USER_NAME: ${{ secrets.HOST_USER }}
        run: |
          echo "$PRIVATE_KEY" > key.pem && chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem ${USER_NAME}@${HOSTNAME} '
            cd /home/ubuntu &&
            sudo docker stop $(docker ps -a -q) &&
            sudo docker rm $(docker ps -a -q) &&
            sudo docker rmi -f $(docker images -q) &&
            sudo docker pull ritikvirus/portfolioubuntu:v${{ steps.increment_tag.outputs.tag }} &&
            sudo docker rm springboot || true &&
            sudo docker run -d -p 8080:80 --name portfolio ritikvirus/portfolioubuntu:v${{ steps.increment_tag.outputs.tag }}
          '


      - name: Send WhatsApp notification
        env:
          TWILIO_SID: ${{ secrets.TWILIO_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_PHONE_NUMBER: ${{ secrets.TWILIO_PHONE_NUMBER }}
          TARGET_PHONE_NUMBER: +918920279167  # Replace with your target phone number
          DOCKER_IMAGE_TAG: ${{ steps.increment_tag.outputs.tag }}
        run: |
          curl -XPOST https://api.twilio.com/2010-04-01/Accounts/${TWILIO_SID}/Messages.json \
            -d "From=${TWILIO_PHONE_NUMBER}" \
            -d "To=${TARGET_PHONE_NUMBER}" \
            -d "Body=The Docker image with tag ${DOCKER_IMAGE_TAG} has been successfully deployed to the EC2 instance."
